// Code generated by Icestudio 0.12
// Wed, 16 Jul 2025 16:58:54 GMT

`default_nettype none

//---- Top entity
module main (
 input vclk,
 output [0:7] vinit
);
 wire w0;
 wire w1;
 assign w1 = vclk;
 v35f267 vee54d3 (
  .v0e28cb(w0)
 );
 v87abc9 vdbcb92 (
 
 );
 v5242e2 v98b275 (
 
 );
 v2b4233 v7c378a (
  .v6d0651(w0),
  .v4c8225(w1)
 );
 assign vinit = 8'b00000000;
endmodule

//---- Top entity
module v35f267 (
 input v0e28cb,
 output vcbab45
);
 wire w0;
 wire w1;
 assign w0 = v0e28cb;
 assign vcbab45 = w1;
 v35f267_vd54ca1 vd54ca1 (
  .a(w0),
  .c(w1)
 );
endmodule

//---------------------------------------------------
//-- NOT
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Puerta NOT
//---------------------------------------------------

module v35f267_vd54ca1 (
 input a,
 output c
);
 //-- Puerta NOT
 
 //-- module (input wire a, output wire c);
 
 
 assign c = ~a;
 
 
 //-- endmodule
 
endmodule
//---- Top entity
module v87abc9 (
 input v0e28cb,
 input v3ca442,
 input v132c67,
 input v814e6e,
 input vae8923,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 assign w3 = v132c67;
 assign w4 = v814e6e;
 assign w5 = vae8923;
 v87abc9_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .o(w2),
  .c(w3),
  .d(w4),
  .e(w5)
 );
endmodule

//---------------------------------------------------
//-- OR-4
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Puerta OR de 4 entradas
//---------------------------------------------------

module v87abc9_vf4938a (
 input a,
 input b,
 input c,
 input d,
 input e,
 output o
);
 //-- Puerta OR
 
 //-- module and (input wire a, input wire b,
 //--             output wire c);
 
 assign o = a | b | c | d | e;
 
 //-- endmodule
endmodule
//---- Top entity
module v5242e2 (
 input [31:0] v917e97,
 input [31:0] v5664d9,
 input [31:0] v918400,
 input [31:0] vae8a69,
 input vec88a9,
 input v76f74e,
 input ve3469f,
 input v58d02d,
 output [31:0] v493538
);
 wire [0:1] w0;
 wire w1;
 wire [0:31] w2;
 wire [0:31] w3;
 wire [0:31] w4;
 wire [0:31] w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire [0:31] w10;
 wire [0:31] w11;
 wire [0:31] w12;
 assign w2 = v917e97;
 assign w3 = v5664d9;
 assign w4 = v918400;
 assign w5 = vae8a69;
 assign w6 = vec88a9;
 assign w7 = v76f74e;
 assign w8 = v58d02d;
 assign w9 = ve3469f;
 assign v493538 = w10;
 v6835fc ve38aa0 (
  .ved33bc(w0),
  .v2828a2(w2),
  .v86e1b9(w3),
  .v010aaa(w4),
  .v930664(w5),
  .v242732(w11)
 );
 veecece vfd598f (
  .vfd29cc(w0),
  .v5a4b06(w1),
  .v78af34(w6),
  .v78ff37(w7),
  .v44b9b7(w8),
  .v259301(w9)
 );
 vad96c0 v4b1d09 (
  .ve50a7b(w1),
  .v9960f4(w10),
  .v231daa(w11),
  .v95bea5(w12)
 );
 v2c97f6 vde5edd (
  .v7c9bd8(w12)
 );
endmodule

//---------------------------------------------------
//-- Bus-4
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus de 32 bits de 4 canales
//---------------------------------------------------
//---- Top entity
module v6835fc (
 input [31:0] v2828a2,
 input [31:0] v86e1b9,
 input [31:0] v010aaa,
 input [31:0] v930664,
 input [1:0] ved33bc,
 output [31:0] v242732
);
 wire [0:31] w0;
 wire [0:31] w1;
 wire [0:31] w2;
 wire [0:31] w3;
 wire [0:31] w4;
 wire [0:1] w5;
 assign w0 = v2828a2;
 assign w1 = v86e1b9;
 assign w2 = v010aaa;
 assign w3 = v930664;
 assign v242732 = w4;
 assign w5 = ved33bc;
 v6835fc_ve4e0df ve4e0df (
  .i3(w0),
  .i2(w1),
  .i1(w2),
  .i0(w3),
  .o(w4),
  .s(w5)
 );
endmodule

//---------------------------------------------------
//-- Mux-4-1-32bits
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Multiplexor de 4 a 1 de 32 bits
//---------------------------------------------------

module v6835fc_ve4e0df (
 input [31:0] i3,
 input [31:0] i2,
 input [31:0] i1,
 input [31:0] i0,
 input [1:0] s,
 output [31:0] o
);
 //-- Multiplexor de 4 a 1, 
 //-- de 32 bits
 
 assign o = (s == 3'h0) ? i0 :
            (s == 3'h1) ? i1 :
            (s == 3'h2) ? i2 : 
            (s == 3'h3) ? i3 :
            32'h0;
            
 
 
endmodule
//---- Top entity
module veecece (
 input v78af34,
 input v78ff37,
 input v259301,
 input v44b9b7,
 output [1:0] vfd29cc,
 output v5a4b06
);
 wire [0:1] w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 assign vfd29cc = w0;
 assign v5a4b06 = w1;
 assign w2 = v78af34;
 assign w3 = v78ff37;
 assign w4 = v259301;
 assign w5 = v44b9b7;
 veecece_v4407ca v4407ca (
  .y(w0),
  .zero(w1),
  .i3(w2),
  .i2(w3),
  .i1(w4),
  .i0(w5)
 );
endmodule

//---------------------------------------------------
//-- Codificador-4-2
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Codificador de 4 a 2, con prioridad. La salida zero se activa cuando ninguna entrada est치 activad
//---------------------------------------------------

module veecece_v4407ca (
 input i3,
 input i2,
 input i1,
 input i0,
 output [1:0] y,
 output zero
);
 //-- Codificador de 4 a 1
 
 //-- Se침alizar que todos son ceros
 assign zero = ({i3,i2,i1,i0}==4'b00);
 
 
 assign y = (i3 == 1) ? 2'h3 :
            (i2 == 1) ? 2'h2 :
            (i1 == 1) ? 2'h1 : 0;
           
 
endmodule
//---- Top entity
module vad96c0 (
 input [31:0] v95bea5,
 input [31:0] v231daa,
 input ve50a7b,
 output [31:0] v9960f4
);
 wire w0;
 wire [0:31] w1;
 wire [0:31] w2;
 wire [0:31] w3;
 assign w0 = ve50a7b;
 assign v9960f4 = w1;
 assign w2 = v231daa;
 assign w3 = v95bea5;
 vad96c0_v4d0636 v4d0636 (
  .sel(w0),
  .o(w1),
  .i0(w2),
  .i1(w3)
 );
endmodule

//---------------------------------------------------
//-- 32-bits-Mux-2-1-verilog
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 2-to-1 Multplexer (32-bit channels). Verilog implementation
//---------------------------------------------------

module vad96c0_v4d0636 (
 input [31:0] i1,
 input [31:0] i0,
 input sel,
 output [31:0] o
);
 //-- 2-to-1 Multiplexer 
 
 assign o = sel ? i1 : i0;
endmodule
//---- Top entity
module v2c97f6 #(
 parameter vfffc23 = 0
) (
 output [31:0] v7c9bd8
);
 localparam p0 = vfffc23;
 wire [0:31] w1;
 assign v7c9bd8 = w1;
 v959751 #(
  .vc5c8ea(p0)
 ) v9f49e7 (
  .vbc97e4(w1)
 );
endmodule

//---------------------------------------------------
//-- 32bits-Value_0
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 32bits constant value: 0
//---------------------------------------------------
//---- Top entity
module v959751 #(
 parameter vc5c8ea = 0
) (
 output [31:0] vbc97e4
);
 localparam p0 = vc5c8ea;
 wire [0:31] w1;
 assign vbc97e4 = w1;
 v959751_v465065 #(
  .VALUE(p0)
 ) v465065 (
  .k(w1)
 );
endmodule

//---------------------------------------------------
//-- 32-bits-gen-constant
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Generic: 32-bits generic constant
//---------------------------------------------------

module v959751_v465065 #(
 parameter VALUE = 0
) (
 output [31:0] k
);
 assign k = VALUE;
endmodule
//---- Top entity
module v2b4233 #(
 parameter v55b764 = 1
) (
 input v4c8225,
 output v6d0651
);
 localparam p1 = v55b764;
 wire w0;
 wire w2;
 wire [0:5] w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 assign v6d0651 = w5;
 assign w7 = v4c8225;
 assign w8 = v4c8225;
 assign w9 = v4c8225;
 assign w6 = w2;
 assign w8 = w7;
 assign w9 = w7;
 assign w9 = w8;
 v21cfcc v3023dc (
  .v9fb85f(w4)
 );
 v2814a1 vf701ed (
  .vc7a3dc(w2),
  .v1c1141(w3)
 );
 vef2764 #(
  .v573b2a(p1)
 ) v9d4f65 (
  .v4642b6(w0),
  .v27dec4(w4),
  .v92a149(w6),
  .v6dda25(w8)
 );
 v192520 v2efe33 (
  .v65c173(w0),
  .v15fb32(w3),
  .vdd729a(w9)
 );
 vae13be vb7abdc (
  .ve78ab8(w2),
  .v3487af(w5),
  .ved8395(w7)
 );
endmodule

//---------------------------------------------------
//-- Init-tic
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Emitir un tic inicial al arrancar, y nunca m치s. Se esperan 32 tics antes de emitir el tic de inicializaci칩n
//---------------------------------------------------
//---- Top entity
module v21cfcc (
 output v9fb85f
);
 wire w0;
 assign v9fb85f = w0;
 v21cfcc_vb2eccd vb2eccd (
  .q(w0)
 );
endmodule

//---------------------------------------------------
//-- 0
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Un bit constante a 0
//---------------------------------------------------

module v21cfcc_vb2eccd (
 output q
);
 //-- Bit constante a 0
 assign q = 1'b0;
 
 
endmodule
//---- Top entity
module v2814a1 (
 input [5:0] v1c1141,
 output vc7a3dc,
 output [4:0] vaa52cb
);
 wire [0:5] w0;
 wire [0:4] w1;
 wire w2;
 assign w0 = v1c1141;
 assign vaa52cb = w1;
 assign vc7a3dc = w2;
 v2814a1_v9a2a06 v9a2a06 (
  .i(w0),
  .o0(w1),
  .o1(w2)
 );
endmodule

//---------------------------------------------------
//-- Separador-bus-1-5
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Separador de bus de 6-bits en 1 bit y bus de 5 bits
//---------------------------------------------------

module v2814a1_v9a2a06 (
 input [5:0] i,
 output o1,
 output [4:0] o0
);
 assign o1 = i[5];
 assign o0 = i[4:0];
 
endmodule
//---- Top entity
module vef2764 #(
 parameter v573b2a = 0
) (
 input v6dda25,
 input v27dec4,
 input v92a149,
 output v4642b6
);
 localparam p3 = v573b2a;
 wire w0;
 wire w1;
 wire w2;
 wire w4;
 assign w0 = v27dec4;
 assign w1 = v92a149;
 assign w2 = v6dda25;
 assign v4642b6 = w4;
 vef2764_v56c60e #(
  .INI(p3)
 ) v56c60e (
  .set(w0),
  .reset(w1),
  .clk(w2),
  .q(w4)
 );
endmodule

//---------------------------------------------------
//-- RS-FF-set-verilog
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- RS-FF-set-verilog. RS Flip-flop with priority set. Implementation in verilog
//---------------------------------------------------

module vef2764_v56c60e #(
 parameter INI = 0
) (
 input clk,
 input set,
 input reset,
 output q
);
 //-- Initial value
 reg qi = INI;
 
 always @(posedge clk)
 begin
 
   //-- Priority on set
   //-- It is first checked
   if (set == 1'b1) 
     qi <= 1'b1;
     
   //-- Second: check reset
   else if (reset == 1'b1)
     qi <= 1'b0;
     
   //-- In any other case the FF
   //-- remains in its current 
   //-- state (no change)
 end
 
 //-- Connect the register with the
 //-- output
 assign q = qi;
 
endmodule
//---- Top entity
module v192520 (
 input vdd729a,
 input v65c173,
 output [5:0] v15fb32
);
 wire w0;
 wire [0:5] w1;
 wire w2;
 assign w0 = vdd729a;
 assign v15fb32 = w1;
 assign w2 = v65c173;
 v192520_ve444b7 ve444b7 (
  .clk(w0),
  .q(w1),
  .ena(w2)
 );
endmodule

//---------------------------------------------------
//-- Contador-6bits-up-system-ena
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Contador del sistema, ascendente, de 6 bits, con enable 
//---------------------------------------------------

module v192520_ve444b7 (
 input clk,
 input ena,
 output [5:0] q
);
 reg [5:0] q_i;
 assign q = q_i;
 
 always @(posedge clk)
 begin
   if (ena)
     q_i <= q_i + 1;
 end
endmodule
//---- Top entity
module vae13be (
 input ved8395,
 input ve78ab8,
 output v1c9ba2,
 output v3487af
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 assign w0 = ve78ab8;
 assign w1 = ved8395;
 assign w4 = ve78ab8;
 assign v3487af = w5;
 assign w4 = w0;
 v3676a0 v9d4cda (
  .v0e28cb(w2),
  .vcbab45(w3)
 );
 vba518e v57aa83 (
  .v0e28cb(w3),
  .v3ca442(w4),
  .vcbab45(w5)
 );
 v58ed2b v4953b3 (
  .vf54559(w0),
  .va4102a(w1),
  .ve8318d(w2)
 );
endmodule

//---------------------------------------------------
//-- Rising-edge-detector
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Rising-edge detector. It generates a 1-period pulse (tic) when a rising edge is detected on the input. Block implementation
//---------------------------------------------------
//---- Top entity
module v3676a0 (
 input v0e28cb,
 output vcbab45
);
 wire w0;
 wire w1;
 assign w0 = v0e28cb;
 assign vcbab45 = w1;
 v3676a0_vd54ca1 vd54ca1 (
  .a(w0),
  .q(w1)
 );
endmodule

//---------------------------------------------------
//-- NOT
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- NOT gate (Verilog implementation)
//---------------------------------------------------

module v3676a0_vd54ca1 (
 input a,
 output q
);
 //-- NOT Gate
 assign q = ~a;
 
 
endmodule
//---- Top entity
module vba518e (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 vba518e_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

//---------------------------------------------------
//-- AND2
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Two bits input And gate
//---------------------------------------------------

module vba518e_vf4938a (
 input a,
 input b,
 output c
);
 //-- AND gate
 //-- Verilog implementation
 
 assign c = a & b;
 
endmodule
//---- Top entity
module v58ed2b #(
 parameter v71e305 = 0
) (
 input va4102a,
 input vf54559,
 output va58c5b,
 output ve8318d
);
 localparam p2 = v71e305;
 wire w0;
 wire w1;
 wire w3;
 assign w0 = va4102a;
 assign ve8318d = w1;
 assign w3 = vf54559;
 v58ed2b_vb8adf8 #(
  .INI(p2)
 ) vb8adf8 (
  .clk(w0),
  .q(w1),
  .d(w3)
 );
endmodule

//---------------------------------------------------
//-- sys-DFF-verilog
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- System - D Flip-flop. Capture data every system clock cycle. Verilog implementation
//---------------------------------------------------

module v58ed2b_vb8adf8 #(
 parameter INI = 0
) (
 input clk,
 input d,
 output q
);
 //-- Initial value
 reg qi = INI;
 
 //-- Capture the input data  
 //-- on the rising edge of  
 //-- the system clock
 always @(posedge clk)
   qi <= d;
   
 //-- Connect the register with the
 //-- output
 assign q = qi;
endmodule
