// Code generated by Icestudio 0.12

`default_nettype none

//---- Top entity
module main (
 input vclk,
 output v0658ae,
 output [0:6] vinit
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign v0658ae = w1;
 assign w3 = vclk;
 vfebcfe v8f07dd (
  .v9fb85f(w0)
 );
 vba518e v9fb9ec (
  .v0e28cb(w0),
  .vcbab45(w1),
  .v3ca442(w2)
 );
 v19a07f vb4c970 (
  .v945519(w2),
  .v4542ee(w3)
 );
 assign vinit = 7'b0000000;
endmodule

//---------------------------------------------------
//-- Led on
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 
//---------------------------------------------------
//---- Top entity
module vfebcfe (
 output v9fb85f
);
 wire w0;
 assign v9fb85f = w0;
 vfebcfe_vb2eccd vb2eccd (
  .q(w0)
 );
endmodule

//---------------------------------------------------
//-- bit-1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Constant bit 1
//---------------------------------------------------

module vfebcfe_vb2eccd (
 output q
);
 //-- Constant bit-1
 assign q = 1'b1;
 
 
endmodule
//---- Top entity
module vba518e (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 vba518e_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

//---------------------------------------------------
//-- AND2
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Two bits input And gate
//---------------------------------------------------

module vba518e_vf4938a (
 input a,
 input b,
 output c
);
 //-- AND gate
 //-- Verilog implementation
 
 assign c = a & b;
 
endmodule
//---- Top entity
module v19a07f (
 input v4542ee,
 output v945519
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign v945519 = w0;
 assign w1 = v4542ee;
 assign w3 = v4542ee;
 assign w3 = w1;
 vce194f v042045 (
  .v81c666(w0),
  .vbc5f1e(w1),
  .v4b9fb0(w2)
 );
 v4ad9ed veb069a (
  .v2545d6(w2),
  .vc331d9(w3)
 );
endmodule

//---------------------------------------------------
//-- Corazon
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Generacion de una señal cuadrada de 1Hz (1 pulso/segundo)
//---------------------------------------------------
//---- Top entity
module vce194f (
 input vbc5f1e,
 input v4b9fb0,
 output v81c666
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v4b9fb0;
 assign v81c666 = w1;
 assign w2 = vbc5f1e;
 vce194f_vc72c4d vc72c4d (
  .t(w0),
  .q(w1),
  .clk(w2)
 );
endmodule

//---------------------------------------------------
//-- Biestable T
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Biestable tipo T
//---------------------------------------------------

module vce194f_vc72c4d (
 input clk,
 input t,
 output q
);
 reg q = 0;
 
 always @(posedge clk)
   if (t)
     q <= ~q;
     
     
endmodule
//---- Top entity
module v4ad9ed (
 input vc331d9,
 output v2545d6
);
 wire [0:22] w0;
 wire w1;
 wire [0:22] w2;
 wire w3;
 wire w4;
 assign v2545d6 = w1;
 assign w3 = vc331d9;
 assign w4 = w1;
 v07a9df v91f0c0 (
  .vddca7d(w0),
  .v2027b7(w1),
  .v2c7e2b(w2)
 );
 vaca928 v372c39 (
  .vcd68b6(w0)
 );
 v6b0e27 vc85945 (
  .vda621c(w2),
  .v9e2649(w3),
  .v07cd4d(w4)
 );
endmodule

//---------------------------------------------------
//-- Corazon_2Hz
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Generacion de pulsos a una frecuencia de 2Hz. El ancho del pulso es el del reloj del sistema
//---------------------------------------------------
//---- Top entity
module v07a9df (
 input [22:0] v2c7e2b,
 input [22:0] vddca7d,
 output v2027b7
);
 wire w0;
 wire [0:22] w1;
 wire [0:22] w2;
 assign v2027b7 = w0;
 assign w1 = v2c7e2b;
 assign w2 = vddca7d;
 v07a9df_v8a4e43 v8a4e43 (
  .eq(w0),
  .a(w1),
  .b(w2)
 );
endmodule

//---------------------------------------------------
//-- Comparador-8bits
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Comparador de 8 bits
//---------------------------------------------------

module v07a9df_v8a4e43 (
 input [22:0] a,
 input [22:0] b,
 output eq
);
 
 assign eq = (a == b);
endmodule
//---- Top entity
module vaca928 (
 output [22:0] vcd68b6
);
 wire [0:22] w0;
 assign vcd68b6 = w0;
 vaca928_v8c0a46 v8c0a46 (
  .o(w0)
 );
endmodule

//---------------------------------------------------
//-- AA_8bits
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Valor constante 0xAA para bus de 8 bits
//---------------------------------------------------

module vaca928_v8c0a46 (
 output [22:0] o
);
 localparam M = 6000000;
 
 assign o = M-1;
endmodule
//---- Top entity
module v6b0e27 (
 input v9e2649,
 input v07cd4d,
 output [22:0] vda621c
);
 wire [0:22] w0;
 wire [0:22] w1;
 wire [0:22] w2;
 wire [0:22] w3;
 wire w4;
 wire w5;
 wire [0:22] w6;
 assign w4 = v9e2649;
 assign w5 = v07cd4d;
 assign vda621c = w6;
 assign w6 = w0;
 v8adc3f v0471c9 (
  .v0ac853(w0),
  .vba84cb(w1),
  .va31c0f(w4)
 );
 vbfd6d4 v95cbc1 (
  .va30991(w0),
  .v9ec4e7(w3)
 );
 v620afb v588a4e (
  .vb821ae(w2)
 );
 v2a138e v1f5ab0 (
  .v5ecf5f(w1),
  .v5c9fa2(w2),
  .v0142e9(w3),
  .v50d6c6(w5)
 );
endmodule

//---------------------------------------------------
//-- Contador-23
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Contador ascendente de 23bits, con reset síncrono
//---------------------------------------------------
//---- Top entity
module v8adc3f (
 input va31c0f,
 input [22:0] vba84cb,
 output [22:0] v0ac853
);
 wire w0;
 wire [0:22] w1;
 wire [0:22] w2;
 assign w0 = va31c0f;
 assign v0ac853 = w1;
 assign w2 = vba84cb;
 v8adc3f_va6d58d va6d58d (
  .clk(w0),
  .do(w1),
  .di(w2)
 );
endmodule

//---------------------------------------------------
//-- Reg23
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Registro de 23 bits, inicializado a 0
//---------------------------------------------------

module v8adc3f_va6d58d (
 input clk,
 input [22:0] di,
 output [22:0] do
);
 reg [22:0] do = 23'h0;
 
 always @(posedge clk)
     do <= di;
endmodule
//---- Top entity
module vbfd6d4 (
 input [22:0] va30991,
 output [22:0] v9ec4e7
);
 wire [0:22] w0;
 wire [0:22] w1;
 assign w0 = va30991;
 assign v9ec4e7 = w1;
 vbfd6d4_va480e1 va480e1 (
  .i(w0),
  .o(w1)
 );
endmodule

//---------------------------------------------------
//-- Sum-2-5bits
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Sumar 2 al bus de 5 bits
//---------------------------------------------------

module vbfd6d4_va480e1 (
 input [22:0] i,
 output [22:0] o
);
 
 assign o = i + 1;
endmodule
//---- Top entity
module v620afb #(
 parameter vfffc23 = 23'h0
) (
 output [22:0] vb821ae
);
 localparam p0 = vfffc23;
 wire [0:22] w1;
 assign vb821ae = w1;
 v4d00d2 #(
  .vc5c8ea(p0)
 ) vb05b2d (
  .vcd68b6(w1)
 );
endmodule

//---------------------------------------------------
//-- AA_8bits
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Valor constante 0xAA para bus de 8 bits
//---------------------------------------------------
//---- Top entity
module v4d00d2 #(
 parameter vc5c8ea = 23'h0
) (
 output [22:0] vcd68b6
);
 localparam p0 = vc5c8ea;
 wire [0:22] w1;
 assign vcd68b6 = w1;
 v4d00d2_v465065 #(
  .V(p0)
 ) v465065 (
  .k(w1)
 );
endmodule

//---------------------------------------------------
//-- AA_8bits
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Valor constante 0xAA para bus de 8 bits
//---------------------------------------------------

module v4d00d2_v465065 #(
 parameter V = 0
) (
 output [22:0] k
);
 assign k = V;
endmodule
//---- Top entity
module v2a138e (
 input [22:0] v0142e9,
 input [22:0] v5c9fa2,
 input v50d6c6,
 output [22:0] v5ecf5f
);
 wire w0;
 wire [0:22] w1;
 wire [0:22] w2;
 wire [0:22] w3;
 assign w0 = v50d6c6;
 assign w1 = v0142e9;
 assign w2 = v5c9fa2;
 assign v5ecf5f = w3;
 v2a138e_ve4e0df ve4e0df (
  .sel(w0),
  .i0(w1),
  .i1(w2),
  .o(w3)
 );
endmodule

//---------------------------------------------------
//-- Mux 2 a 1 (8bits)
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Multiplexor de 2 a 1 de buses de 8 bits
//---------------------------------------------------

module v2a138e_ve4e0df (
 input [22:0] i0,
 input [22:0] i1,
 input sel,
 output [22:0] o
);
 assign o = (sel) ? i1 : i0;
 
endmodule
